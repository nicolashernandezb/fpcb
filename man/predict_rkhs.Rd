% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict_rkhs.R
\name{predict_rkhs}
\alias{predict_rkhs}
\title{Predict functional time series using ARH RKHS.}
\usage{
predict_rkhs(
  model,
  newdata,
  bands = FALSE,
  B = 100,
  level = 0.95,
  kvec = round(sqrt(2 * B))
)
}
\arguments{
\item{model}{a arh_rkhs object containing the functional objects and the
lambda coefficients of the d dimensional RKHS representation and the
autocorrelation operator.}

\item{newdata}{an optional data frame in which to look for variables with
which to predict. If missing, the fitted values are used.}

\item{bands}{logical variable indicating if the predictive confidence band
is computed. Default = FALSE.}

\item{B}{number of bootstrap replicates for the band construction. Needed if
bands = TRUE. Default = 100.}

\item{level}{confidence level for the band construction. Needed if bands =
TRUE. Default = 0.95.}

\item{kvec}{number of neighbour points to consider in the computation of the
minimum entropy set.}
}
\value{
\item{forecast}{1 step ahead forecast.} \item{fitted}{fitted
values.} \item{UB}{upper bound of the 1-\eqn{alpha} predictive confidence
band.} \item{LB}{lower bound of the 1-\eqn{alpha} predictive confidence
band.} \item{bootsrap.pred}{bootstrap pseudo replicates.}
\item{bootsrap.pred.inband}{bootstrap pseudo replicates included in the
1-\eqn{alpha} predictive confidence band.} \item{res}{estimation residuals.}
}
\description{
using an ARH of order 1 obtain 1 step ahead forecast and 1-\eqn{alpha}
predictive confidence bands for the forecasted function.
}
\examples{
require(ftsa)
t            <- seq(0, 1,length.out = nrow(ftsa::pm_10_GR$y)) 
kernel       <- rk(grid = t, r=10, sigma = 0.01)
data         <- t(sqrt(ftsa::pm_10_GR$y))
fd.curves    <- fdata_rkhs(curves = data, rk = kernel)
model        <- arh_rkhs(fd.curves)
#POINT PREDICTION 
predict.rkhs <- fpcb::predict_rkhs(model, bands=F)
matplot(t,t(data), xlab='time', ylab='PM10 dataset', col='gray', lty=1, type='l')
matlines(t,t(fd.curves$fdata), col='blue', lty=1)
lines(t,predict.rkhs$forecast,col='red',lty=1,lwd=1.5)
legend("topright",lty=1, col=c('gray','blue','red'), legend=c('PM10 curves','PM10 smoothed curves','Point Forecast (n+1)'))
#PREDICTIVE BANDS
predict.rkhs <- fpcb::predict_rkhs(model, bands=T, B = 1000, level = 0.95)
matplot(t,t(data), xlab='time', ylab='PM10 dataset', col='gray', lty=1, type='l')
lines(t,predict.rkhs$forecast,col='red',lty=1,lwd=1.5)
lines(t,predict.rkhs$UB,col='blue',lty=2,lwd=1.5)
lines(t,predict.rkhs$LB,col='blue',lty=2,lwd=1.5)
legend("topright",lty=c(1,1,2), col=c('gray','red','blue'), legend=c('PM10 curves','Point Forecast (n+1)','95% Conf. Band'))
}
\references{
N. Hernández, J. Cugliari, J. Jacques. Simultaneous Predictive
Bands for Functional Time Series using Minimum Entropy Sets. arXiv:2105.13627 (2021).
}
\author{
N. Hernández and J. Cugliari
}
